1q What should every BASH script start with? 
1a #!/bin/bash (b)
2q What is the purpose of exit 0 that can be used at the end of scripts? 
2a It informs the parent shell that the script executed without issue (a)
3q How do you stop a script to allow a user to provide input? 
3a read (c)
4q How to define a variable by the first argument provided? 
4a name=$1 (a)
5q What is the best way to distinguish between different arguments that have been passed into a shell script? 
5a !idk
6q What is used to close an if loop?
6a fi (d)
7q idk
7a idk
8q idk
8a idk
9q What command will send a message with the Sub "error" to the user root if something didn't work in a script? 
9a idk!
10q In a case statement, it is a good idea to include a line that applies to ALL other siutations. How do? 
10a else (c)


11q What command will request the exit status of the last command? 
11a echo $?
12q What two ways can you execute hello.sh? 
12a Either ./hello.sh or bash hello.sh
12e If a scripted is started as an argument to bash, execute privileges are not needed. If ran directly (./hello.sh) +x is required.
13q What is the bash to count supplied arguments to a script? What then refers to *all* arguments? 
13a $# is a bash variable equal to the number of supplied arguments. $@ is a bash variable referring to *all* arguments.
14q What is a variable? 
14a A 'label' referring to a specific location in memory that contains a specific value.
15q What are the modern and legacy syntax for command substitution? 
15a variable=$(date) or variable=`date`. Both are POSIX compliant, but backquotes are considered "legacy" by many, favoring $() for ease of use nesting
16q The test command can wrap a conditional statement in what brackets? Define arguments -z & -n.
16a if test -z $1; if [ -z $1 ]; -z = length of stirng is zero; -n = length of string is !zero
17q What are the test command arguments for 'file exists and is a directory', 'file exists', and 'file exists with a size on disk greater than zero'? 
17a test -e || [ -e $directory ] ; test -f || [ -e $fileName ] ; test -s [ -s $fileGreaterThanZero ] ; 
18q Bashisms: Escape character? And, or, not logical operators? 
18a \ ; && ; ||  
19q 
